# ===================================================================
# Spring Boot configuration.
#
# This configuration will be overridden by the Spring profile you use,
# for example application-dev.yml if you use the "dev" profile.
#
# ===================================================================

# ===================================================================
# Standard Spring Boot properties.
# Full reference is available at:
# http://docs.spring.io/spring-boot/docs/current/reference/html/common-application-properties.html
# ===================================================================


server:
  servlet:
    context-path: /
    session:
      cookie:
        http-only: true
  port: 8080

eureka:
  client:
    register-with-eureka: false
    enabled: false


# following setting are for dealing with 404 error
spring:
  application:
    name: arcx-default
  mvc:
    throw-exception-if-no-handler-found: true
  resources:
    add-mappings: true # false value is needed for json based 404 error but for static contents it has be true.
    #static-locations: classpath:/META-INF/resources/,classpath:/resources/,classpath:/static/,classpath:/public/ # Locations of static resources
  jackson:
    serialization:
      indent_output: true
  data:
    rest:
      return-body-on-create: false
      return-body-on-update: false
      base-path: /api
  jpa:
    open-in-view: false
    properties:
      hibernate.jdbc.time_zone: UTC
      hibernate.id.new_generator_mappings: true
      hibernate.connection.provider_disables_autocommit: true
      hibernate.cache.use_second_level_cache: false
      hibernate.cache.use_query_cache: false
      hibernate.generate_statistics: false
      # modify batch size as necessary
      hibernate.jdbc.batch_size: 25
      hibernate.order_inserts: true
      hibernate.order_updates: true
      hibernate.query.fail_on_pagination_over_collection_fetch: true
      hibernate.query.in_clause_parameter_padding: true
    hibernate:
      ddl-auto: none
      naming:
        physical-strategy: org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy
        implicit-strategy: org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy


#Metrics related configurations
management:
  endpoint:
    metrics:
      enabled: true
    prometheus:
      enabled: true
    health:
      show-details: always
  endpoints:
    web:
      base-path: /manage # default is actuator - now you can access /api/manage/health
      exposure:
        include: prometheus, info, health
  #        include: "*" # this is not good for security
  metrics:
    export:
      prometheus:
        enabled: true
  # showing more information for git in /info
  info:
    git:
      mode: full

## Spring Boot Actuator Info Endpoint Customization
info:

  # static properties
  app:
    name: ${spring.application.name}
    description: microservice for chemical list.

  # build properties from maven
  build:
    groupId: @project.groupId@
    artifact: @project.artifactId@
    name: @project.name@
    version: @project.version@

  # environment variables
  env:
    java:
      vendor: ${java.specification.vendor}
      vm-name: ${java.vm.name}
      runtime-version: ${java.runtime.version}


# ===================================================================
# Application specific properties
# Add your own application properties here, see the ApplicationProperties class
# to have type-safe configuration
#
# ===================================================================

# application:
application:
  doc-host-replacement: (dev server goes here)
  doc-host-port: 443
  doc-host-http-protocol: https

